// These settings are used to adjust the pcLint checking for
// the operating unit source code

// show pclint where to find Header files

-max_threads=12

-iC:\mingw\include
-iC:\mingw\include\ddk
-iC:\mingw\mingw32\lib\gcc\mingw32\4.8.1\include
-iC:\mingw\mingw32\lib\gcc\mingw32\4.8.1\include\c++\mingw32\bits
-iC:\mingw\lib\gcc\mingw32\4.8.1\include\
-iC:\mingw\lib\gcc\mingw32\4.8.1\include-fixed\
-iC:\mingw\lib\gcc\mingw32\4.8.1\include\c++\
-iC:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\
-iC:\mingw\lib\gcc\mingw32\4.8.1\include\c++\regex\
-iC:\mingw\lib\gcc\mingw32\4.8.1\include\c++\mingw32\
//+libdir(D:\Programme\linaro\gcc-linaro-arm-linux-gnueabihf-4.9-2014.08\*)	// define a directory as holding only headers, may be used with * or ?
//+libdir(D:\Programme\linaro\gcc-linaro-arm-linux-gnueabihf-4.9-2014.08\libc\usr\include\*)

//+libclass(ansi)	// use this if only ANSI headers are seen as unchecked libraries
+libclass(foreign)	// ignore all headers coming from a foreign directory using -i or the INCLUDE environment variable
//+libclass(angle)	// ingore all headers specified with angle brackets
+libclass(all)	    // ignore all header files
+libh(co-ggc.lnt)	// ignore this file
+libh(lint_cppmac.h) // ignore this file
//+libdir(uncrustify/scripts/pclint/*)
//-wlib(1)    // Disable non-error messages from library headers
//-wlib(0)    // Disable non-error messages from library headers
-elib(19)   // Suppress 'useless declaration' for spurious ';' in headers


-i".\include"
-i".\lib"
-i".\src"
-i".\win32"

// Compiler specific configuration for MinGW

// co-tiger.lnt use this file for tiger sharc as reference
scripts\pclint\co-gcc.lnt 	// Compiler Options for GCC

// Configuration for checking the operating unit source code

-t3			// one tabstop is 3 blank characters wide
-$			// regard $ as an identifier character

-d__cplusplus
//-d__cplusplus=20130531
//-d_GNU_SOURCE
//-d__GNUC__
//-d__STDC__
//-d__GLIBCXX__=20130531
//-d__SIZE_TYPE__=int
//-d__PTRDIFF_TYPE__=int
//-d__CHAR_BIT__=8
//-dWIN32
//-d__i386__
//-d__i586__
//-d__i686__
-dDEFINE_CHAR_TABLE
-dDEFINE_PCF_NAMES 
-dDEBUG
-d__STRICT_ANSI__
-A(C++2011)
//-A(C2011)
--u__GXX_EXPERIMENTAL_CXX0X__
-d_CXX0X_WARNING_H=1


// define compiler specific keywords

//+rw(__inline)				// activate the __inline keyword
//+ppw(import)				// activate #import
//-d"_exit=_up_to_brackets"
//-d"extern 'C'=gobble"
//+fkp        				// complain about non-KR extensions
-fvl						// disabel variable length arrays

// To print a stack usage report pclint has to know how much space is required by some functions
// define an upper limit of stack space usage for recursion and function pointers

